/*
	Typography
*/

// baseline formula based on the $alpha-line-height variable
// use: @include text-dimensions(#font-size, #line-height, #margin-bottom, #padding-top)

$baseline-unit: $alpha-font-size * $alpha-line-height;
$basefontpercent: $alpha-font-size/16 * 100;

@mixin text-dimensions($fs: 16, $lh: 1, $mb: 1, $pt: 0, $pb: 0){
	// use this for rems
	// font-size: #{$fs}px;
	// font-size: #{$fs / $alpha-font-size}rem;
	font-size: #{$fs / $alpha-font-size}em;
	line-height: #{($baseline-unit / $fs) * $lh}em;
	margin-bottom: #{($baseline-unit / $fs) * $mb}em;
	@if $pt > 0 {
		padding-top: #{($baseline-unit / $fs) * $pt}em;
	}
	@if $pb > 0 {
		padding-bottom: #{($baseline-unit / $fs) * $pt}em;
	}
}

@mixin input-dimensions($fs: 16, $lh: 1, $mb: 1, $pt: 0, $pb: 0){
	// use this for rems
	// font-size: #{$fs}px;
	// font-size: #{$fs / $alpha-font-size}rem;
	font-size: #{$fs / $alpha-font-size}em;
	line-height: #{($baseline-unit / $fs) * $lh}em;
	height:  #{($baseline-unit / $fs) * $lh}em;
	margin-bottom: #{($baseline-unit / $fs) * $mb}em;
	@if $pt > 0 {
		padding-top: #{($baseline-unit / $fs) * $pt}em;
	}
	@if $pb > 0 {
		padding-bottom: #{($baseline-unit / $fs) * $pt}em;
	}
}


// baseline formulas based on the $alpha-baseline-grid variable
// use: @include grid-input-dimensions(#font-size, #padding-top, #padding-bottom, #leading)

@mixin grid-input-dimensions($fs: 0, $pt: 0, $pb: 0, $l: $leading){

	@if $fs == 0 {
		font-size: 1em;
		line-height: ((ceil($alpha-font-size/$alpha-baseline-grid)*$alpha-baseline-grid)+($alpha-baseline-grid*$l))/$alpha-font-size;

		@if $pt > 0 {
			padding-top: $alpha-baseline-grid/$alpha-font-size*$pt*1em;
		}

		@if $pb > 0 {
			padding-bottom: $alpha-baseline-grid/$alpha-font-size*$pb*1em;
		}
	}

	@if $fs != 0 {
		font-size: ms($fs);
		line-height: ((ceil(su(ms($fs)*$alpha-font-size)/$alpha-baseline-grid)*$alpha-baseline-grid)+($alpha-baseline-grid*$l))/su(ms($fs)*$alpha-font-size);

		@if $pt > 0 {
			padding-top: $alpha-baseline-grid/su(ms($fs)*$alpha-font-size)*$pt*1em;
		}

		@if $pb > 0 {
			padding-bottom: $alpha-baseline-grid/su(ms($fs)*$alpha-font-size)*$pb*1em;
		}
	}

}

@mixin grid-text-dimensions($fs: 0, $pt: 0, $pb: 0, $l: $leading) {

	@if $fs == 0 {
		font-size: 1em;
		line-height: ((ceil($alpha-font-size/$alpha-baseline-grid)*$alpha-baseline-grid)+($alpha-baseline-grid*$l))/$alpha-font-size;

		@if $pt > 0 {
			padding-top: $alpha-baseline-grid/$alpha-font-size*$pt*1em;
		}

		@if $pb > 0 {
			padding-bottom: $alpha-baseline-grid/$alpha-font-size*$pb*1em;
		}
	}

	@if $fs != 0 {
		font-size: ms($fs);
		line-height: ((ceil(su(ms($fs)*$alpha-font-size)/$alpha-baseline-grid)*$alpha-baseline-grid)+($alpha-baseline-grid*$l))/su(ms($fs)*$alpha-font-size);

		@if $pt > 0 {
			padding-top: $alpha-baseline-grid/su(ms($fs)*$alpha-font-size)*$pt*1em;
		}

		@if $pb > 0 {
			padding-bottom: $alpha-baseline-grid/su(ms($fs)*$alpha-font-size)*$pb*1em;
		}
	}

}
